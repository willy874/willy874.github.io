import{__toESM as e,require_react as t}from"./iframe-DTweaop1.js";import{require_jsx_runtime as n}from"./jsx-runtime-OfONc6Te.js";import"./react-dom-WNPkwNKm.js";import{sva as r}from"./global-BFiYQvx2.js";import{createAnatomy as i,createGuards as a,createMachine as o,createProps as s,createSplitProps as c,dataAttr as l,dispatchInputCheckedEvent as u,getEventTarget as ee,normalizeProps as te,setElementChecked as ne,trackFormControl as d,trackPress as f,useMachine as p,visuallyHiddenStyle as m}from"./dist-CJv5zd9o.js";import{isFocusVisible as re,trackFocusVisible as ie}from"./dist-DbHZ96Yb.js";import{defineArgs as ae,mergeAttrs as h}from"./defineMeta-BJJsfI8u.js";var oe,g,se,_,ce,v,y,b,le,x,ue,S,de,fe,pe,me,he,ge,_e,ve,ye,C,be,w,xe,T,Se,E,Ce,D,we=i(`checkbox`).parts(`root`,`label`,`control`,`indicator`),O=we.build(),Te=e=>{var t;return(t=e.ids)?.root??`checkbox:${e.id}`},Ee=e=>{var t;return(t=e.ids)?.label??`checkbox:${e.id}:label`},De=e=>{var t;return(t=e.ids)?.control??`checkbox:${e.id}:control`},Oe=e=>{var t;return(t=e.ids)?.hiddenInput??`checkbox:${e.id}:input`},ke=e=>e.getById(Te(e)),k=e=>e.getById(Oe(e));function Ae(e,t){let{send:n,context:r,prop:i,computed:a,scope:o}=e,s=i(`disabled`),c=i(`readOnly`),u=i(`invalid`),te=!s&&r.get(`focused`),ne=!s&&r.get(`focusVisible`),d=a(`checked`),f=a(`indeterminate`),p={"data-active":l(r.get(`active`)),"data-focus":l(te),"data-focus-visible":l(ne),"data-readonly":l(c),"data-hover":l(r.get(`hovered`)),"data-disabled":l(s),"data-state":f?`indeterminate`:d?`checked`:`unchecked`,"data-invalid":l(u)};return{checked:d,disabled:s,indeterminate:f,focused:te,checkedState:d,setChecked(e){n({type:`CHECKED.SET`,checked:e,isTrusted:!1})},toggleChecked(){n({type:`CHECKED.TOGGLE`,checked:d,isTrusted:!1})},getRootProps(){return t.label({...O.root.attrs,...p,dir:i(`dir`),id:Te(o),htmlFor:Oe(o),onPointerMove(){s||n({type:`CONTEXT.SET`,context:{hovered:!0}})},onPointerLeave(){s||n({type:`CONTEXT.SET`,context:{hovered:!1}})},onClick(e){let t=ee(e);t===k(o)&&e.stopPropagation()}})},getLabelProps(){return t.element({...O.label.attrs,...p,dir:i(`dir`),id:Ee(o)})},getControlProps(){return t.element({...O.control.attrs,...p,dir:i(`dir`),id:De(o),"aria-hidden":!0})},getIndicatorProps(){return t.element({...O.indicator.attrs,...p,dir:i(`dir`),hidden:!f&&!d})},getHiddenInputProps(){return t.input({id:Oe(o),type:`checkbox`,required:i(`required`),defaultChecked:d,disabled:s,"aria-labelledby":Ee(o),"aria-invalid":u,name:i(`name`),form:i(`form`),value:i(`value`),style:m,onFocus(){let e=re();n({type:`CONTEXT.SET`,context:{focused:!0,focusVisible:e}})},onBlur(){n({type:`CONTEXT.SET`,context:{focused:!1,focusVisible:!1}})},onClick(e){if(c){e.preventDefault();return}let t=e.currentTarget.checked;n({type:`CHECKED.SET`,checked:t,isTrusted:!0})}})}}}var{not:je}=a(),Me=o({props({props:e}){return{value:`on`,...e,defaultChecked:!!e.defaultChecked}},initialState(){return`ready`},context({prop:e,bindable:t}){return{checked:t(()=>({defaultValue:e(`defaultChecked`),value:e(`checked`),onChange(t){var n;(n=e(`onCheckedChange`))?.({checked:t})}})),fieldsetDisabled:t(()=>({defaultValue:!1})),focusVisible:t(()=>({defaultValue:!1})),active:t(()=>({defaultValue:!1})),focused:t(()=>({defaultValue:!1})),hovered:t(()=>({defaultValue:!1}))}},watch({track:e,context:t,prop:n,action:r}){e([()=>n(`disabled`)],()=>{r([`removeFocusIfNeeded`])}),e([()=>t.get(`checked`)],()=>{r([`syncInputElement`])})},effects:[`trackFormControlState`,`trackPressEvent`,`trackFocusVisible`],on:{"CHECKED.TOGGLE":[{guard:je(`isTrusted`),actions:[`toggleChecked`,`dispatchChangeEvent`]},{actions:[`toggleChecked`]}],"CHECKED.SET":[{guard:je(`isTrusted`),actions:[`setChecked`,`dispatchChangeEvent`]},{actions:[`setChecked`]}],"CONTEXT.SET":{actions:[`setContext`]}},computed:{indeterminate:({context:e})=>A(e.get(`checked`)),checked:({context:e})=>Ne(e.get(`checked`)),disabled:({context:e,prop:t})=>!!t(`disabled`)||e.get(`fieldsetDisabled`)},states:{ready:{}},implementations:{guards:{isTrusted:({event:e})=>!!e.isTrusted},effects:{trackPressEvent({context:e,computed:t,scope:n}){if(!t(`disabled`))return f({pointerNode:ke(n),keyboardNode:k(n),isValidKey:e=>e.key===` `,onPress:()=>e.set(`active`,!1),onPressStart:()=>e.set(`active`,!0),onPressEnd:()=>e.set(`active`,!1)})},trackFocusVisible({computed:e,scope:t}){var n;if(!e(`disabled`))return ie({root:(n=t.getRootNode)?.call(t)})},trackFormControlState({context:e,scope:t}){return d(k(t),{onFieldsetDisabledChange(t){e.set(`fieldsetDisabled`,t)},onFormReset(){e.set(`checked`,e.initial(`checked`))}})}},actions:{setContext({context:e,event:t}){for(let n in t.context)e.set(n,t.context[n])},syncInputElement({context:e,computed:t,scope:n}){let r=k(n);r&&(ne(r,t(`checked`)),r.indeterminate=A(e.get(`checked`)))},removeFocusIfNeeded({context:e,prop:t}){t(`disabled`)&&e.get(`focused`)&&(e.set(`focused`,!1),e.set(`focusVisible`,!1))},setChecked({context:e,event:t}){e.set(`checked`,t.checked)},toggleChecked({context:e,computed:t}){let n=A(t(`checked`))?!0:!t(`checked`);e.set(`checked`,n)},dispatchChangeEvent({computed:e,scope:t}){queueMicrotask(()=>{let n=k(t);u(n,{checked:e(`checked`)})})}}}});function A(e){return e===`indeterminate`}function Ne(e){return A(e)?!1:!!e}var Pe=s()([`defaultChecked`,`checked`,`dir`,`disabled`,`form`,`getRootNode`,`id`,`ids`,`invalid`,`name`,`onCheckedChange`,`readOnly`,`required`,`value`]),Fe=c(Pe),j=e(n()),M=e(t());const Ie=e=>(0,j.jsx)(`svg`,{width:`1em`,height:`1em`,viewBox:`0 0 14 14`,fill:`none`,xmlns:`http://www.w3.org/2000/svg`,...e,children:(0,j.jsx)(`path`,{d:`M11.6673 3.5L5.25065 9.91667L2.33398 7`,stroke:`currentColor`,strokeWidth:1.5,strokeLinecap:`round`,strokeLinejoin:`round`})});var Le=Ie;const Re=r({slots:[`root`,`text`,`controlBox`,`input`],base:{root:{display:`inline-flex`,alignItems:`center`,cursor:`pointer`,userSelect:`none`,gap:`{spacing.2}`,fontWeight:`400`,"&[data-disabled]":{pointerEvents:`none`,cursor:`not-allowed`}},text:{display:`inline-flex`,alignItems:`center`,fontSize:`sm`,lineHeight:`sm`},controlBox:{display:`flex`,position:`relative`,alignItems:`center`,justifyContent:`center`,width:`{spacing.5}`,height:`{spacing.5}`,color:`{colors.checkbox.inverse}`,border:`1px solid {colors.checkbox.default}`,backgroundColor:`transparent`,borderRadius:`{radii.sm}`,transition:`background-color 0.2s, box-shadow 0.2s`,_indeterminate:{_after:{content:`""`,position:`absolute`,height:`2px`,borderRadius:`{radii.sm}`,backgroundColor:`{colors.checkbox.inverse}`,top:`calc(50% - 1px)`,bottom:`calc(50% - 1px)`,left:`2px`,right:`2px`}},'&[data-state="checked"]':{backgroundColor:`{colors.checkbox.selected}`,borderColor:`{colors.checkbox.selected}`},'&[data-state="indeterminate"]':{backgroundColor:`{colors.checkbox.selected}`,borderColor:`{colors.checkbox.selected}`},"&[data-disabled]":{opacity:.5,borderColor:`{colors.checkbox.disabled}`},'&[data-disabled][data-state="checked"]':{borderColor:`{colors.checkbox.selectedDisabled}`,backgroundColor:`{colors.checkbox.selectedDisabled}`},"&[data-invalid]":{borderColor:`{colors.checkbox.invalid}`},'&[data-invalid][data-state="checked"]':{backgroundColor:`{colors.checkbox.invalid}`},'&[data-invalid][data-state="indeterminate"]':{backgroundColor:`{colors.checkbox.invalid}`},"&[data-invalid][data-disabled]":{borderColor:`{colors.checkbox.selectedInvalidDisabled}`},'&[data-invalid][data-disabled][data-state="checked"]':{backgroundColor:`{colors.checkbox.selectedInvalidDisabled}`},'&[data-invalid][data-disabled][data-state="indeterminate"]':{backgroundColor:`{colors.checkbox.selectedInvalidDisabled}`}},input:{}},variants:{variant:{label:{root:{border:`none`,backgroundColor:`transparent`,color:`{colors.checkbox.default}`,_hover:{color:`{colors.checkbox.hover}`},_active:{color:`{colors.checkbox.active}`},_disabled:{color:`{colors.checkbox.disabled}`}}},outlined:{root:{border:`1px solid {colors.checkbox.default}`,backgroundColor:`transparent`,color:`{colors.checkbox.default}`,_hover:{borderColor:`{colors.checkbox.hover}`,color:`{colors.checkbox.hover}`},_active:{borderColor:`{colors.checkbox.active}`,color:`{colors.checkbox.active}`},'&[data-state="checked"]':{borderColor:`{colors.checkbox.selected}`,backgroundColor:`{colors.checkbox.selected}`,color:`{colors.checkbox.inverse}`,_hover:{borderColor:`{colors.checkbox.selected}`,backgroundColor:`{colors.checkbox.selected}`,color:`{colors.checkbox.inverse}`},_active:{borderColor:`{colors.checkbox.selected}`,backgroundColor:`{colors.checkbox.selected}`,color:`{colors.checkbox.inverse}`}},"&[data-invalid]":{},'&[data-invalid][data-state="checked"]':{},"&[data-disabled]":{},'&[data-disabled][data-state="checked"]':{borderColor:`{colors.radioGroup.selectedDisabled}`,backgroundColor:`{colors.radioGroup.selectedDisabled}`,color:`{colors.radioGroup.disabledInverse}`},"&[data-disabled][data-invalid]":{},'&[data-invalid][data-state="checked"][data-disabled]':{borderColor:`{colors.radioGroup.selectedInvalidDisabled}`,backgroundColor:`{colors.radioGroup.selectedInvalidDisabled}`,color:`{colors.radioGroup.disabledInverse}`}}}},theme:{primary:{},secondary:{},primaryBlue:{}},size:{small:{root:{fontSize:`sm`}},medium:{root:{fontSize:`md`}},large:{root:{fontSize:`lg`}}},shape:{rounded:{root:{borderRadius:`md`}},square:{root:{borderRadius:`none`}},pill:{root:{borderRadius:`full`}},icon:{root:{borderRadius:`50%`}}}},defaultVariants:{variant:`label`,theme:`primary`,size:`medium`,shape:`rounded`},compoundVariants:[{variant:`outlined`,size:`small`,css:{root:{py:`{spacing.2}`,px:`{spacing.3}`,gap:`10px`}}},{variant:`outlined`,size:`medium`,css:{root:{py:`{spacing.3}`,px:`{spacing.4}`,gap:`10px`}}},{variant:`outlined`,size:`large`,css:{root:{py:`{spacing.4}`,px:`{spacing.5}`,gap:`10px`}}},{shape:`icon`,css:{root:{minWidth:`0`,fontSize:`xl`}}},{shape:`icon`,variant:`outlined`,css:{root:{padding:`16px`}}},{shape:`icon`,variant:`label`,css:{root:{padding:`0`}}}]}),ze=e=>{let t=Re.getVariantProps(e);return Re(t)},N=Re.variantMap,Be=(0,M.createContext)(null),Ve=()=>{let e=(0,M.useContext)(Be);if(!e)throw Error(`useCheckboxContext must be used within a CheckboxProvider`);return e},He=(0,M.createContext)({}),Ue=e=>{let t=(0,M.useContext)(He);return t[e]};function We({children:e,value:t}){return(0,j.jsx)(Be.Provider,{value:t,children:e})}function P({...e}){let{classNames:t,api:n}=Ve();return(0,j.jsx)(`input`,{...h(n.getHiddenInputProps(),e,{className:t.input})})}function F({value:e,invalid:t,disabled:n,checked:r,readOnly:i,children:a,onValueChange:o,onStateChange:s,render:c,inputProps:l,variant:u,theme:ee,shape:ne,size:d,...f}){let{value:m,setGroupValue:re,invalid:ie,disabled:ae,readOnly:oe}=Ue(f.name||`default`)||{value:null,setGroupValue:null},g=(()=>!!(m===`indeterminate`||oe||i))(),se=(()=>{if(r)return r;if(m===`indeterminate`)return`indeterminate`;if(m)return m.includes(e)})(),_=ie||t,ce=ae||n,v=(0,M.useMemo)(()=>({invalid:_,disabled:ce,readOnly:g,checked:se}),[_,ce,g,se]),y=(0,M.useRef)(s);(0,M.useEffect)(()=>{y.current=s},[s]),(0,M.useEffect)(()=>{var e;(e=y.current)?.call(y,v)},[v]);let b={id:(0,M.useId)(),...v,value:e,onCheckedChange:t=>{re&&re(n=>n===`indeterminate`?[e]:t.checked===!0?[...n,e]:n.filter(t=>t!==e)),o?.(t.checked!==!1)}},le=p(Me,b),x=Ae(le,te),ue=ze({variant:u,theme:ee,shape:ne,size:d});return(0,j.jsx)(We,{value:{api:x,classNames:ue},children:(0,j.jsxs)(`label`,{...h(x.getRootProps(),f,{className:ue.root}),children:[(0,j.jsx)(P,{...l}),c?c(b):a]})})}function I({children:e,...t}){let{classNames:n,api:r}=Ve();return(0,j.jsx)(`span`,{...h(r.getLabelProps(),t,{className:n.text}),children:e})}function L({children:e,...t}){let{classNames:n,api:r}=Ve();return(0,j.jsx)(`div`,{...h(r.getControlProps(),t,{className:n.controlBox}),children:r.checked&&(e||(0,j.jsx)(Le,{}))})}function R({controlBoxProps:e,textProps:t,checkedNode:n,children:r,...i}){return(0,j.jsxs)(F,{...i,children:[(0,j.jsx)(P,{}),i.variant===`outlined`?null:(0,j.jsx)(L,{...e,children:n}),(0,j.jsx)(I,{...t,children:r})]})}R.Root=F,R.Text=I,R.ControlBox=L,R.HiddenControl=P;try{P.displayName=`CheckboxHiddenControl`,P.__docgenInfo={description:``,displayName:`CheckboxHiddenControl`,props:{}}}catch{}try{F.displayName=`CheckboxRoot`,F.__docgenInfo={description:``,displayName:`CheckboxRoot`,props:{value:{defaultValue:null,description:``,name:`value`,required:!0,type:{name:`string`}},name:{defaultValue:null,description:``,name:`name`,required:!1,type:{name:`string`}},invalid:{defaultValue:null,description:``,name:`invalid`,required:!1,type:{name:`boolean`}},disabled:{defaultValue:null,description:``,name:`disabled`,required:!1,type:{name:`boolean`}},readOnly:{defaultValue:null,description:``,name:`readOnly`,required:!1,type:{name:`boolean`}},checked:{defaultValue:null,description:``,name:`checked`,required:!1,type:{name:`boolean | "indeterminate"`}},onValueChange:{defaultValue:null,description:``,name:`onValueChange`,required:!1,type:{name:`((value: boolean) => void)`}},onStateChange:{defaultValue:null,description:``,name:`onStateChange`,required:!1,type:{name:`((state: CheckboxState) => void)`}},render:{defaultValue:null,description:``,name:`render`,required:!1,type:{name:`((params: CheckboxRenderParams) => ReactNode)`}},inputProps:{defaultValue:null,description:``,name:`inputProps`,required:!1,type:{name:`Omit<InputHTMLAttributes<HTMLInputElement>, ExcludeAttributes>`}},variant:{defaultValue:null,description:``,name:`variant`,required:!1,type:{name:`enum`,value:[{value:`"outlined"`},{value:`"label"`}]}},theme:{defaultValue:null,description:``,name:`theme`,required:!1,type:{name:`enum`,value:[{value:`"primary"`},{value:`"secondary"`},{value:`"primaryBlue"`}]}},shape:{defaultValue:null,description:``,name:`shape`,required:!1,type:{name:`enum`,value:[{value:`"rounded"`},{value:`"square"`},{value:`"pill"`},{value:`"icon"`}]}},size:{defaultValue:null,description:``,name:`size`,required:!1,type:{name:`enum`,value:[{value:`"medium"`},{value:`"small"`},{value:`"large"`}]}}}}}catch{}try{I.displayName=`CheckboxText`,I.__docgenInfo={description:``,displayName:`CheckboxText`,props:{}}}catch{}try{L.displayName=`CheckboxControlBox`,L.__docgenInfo={description:``,displayName:`CheckboxControlBox`,props:{}}}catch{}try{R.displayName=`Checkbox`,R.__docgenInfo={description:``,displayName:`Checkbox`,props:{controlBoxProps:{defaultValue:null,description:``,name:`controlBoxProps`,required:!1,type:{name:`CheckboxControlBoxProps`}},textProps:{defaultValue:null,description:``,name:`textProps`,required:!1,type:{name:`CheckboxTextProps`}},checkedNode:{defaultValue:null,description:``,name:`checkedNode`,required:!1,type:{name:`ReactNode`}},variant:{defaultValue:null,description:``,name:`variant`,required:!1,type:{name:`enum`,value:[{value:`"outlined"`},{value:`"label"`}]}},theme:{defaultValue:null,description:``,name:`theme`,required:!1,type:{name:`enum`,value:[{value:`"primary"`},{value:`"secondary"`},{value:`"primaryBlue"`}]}},shape:{defaultValue:null,description:``,name:`shape`,required:!1,type:{name:`enum`,value:[{value:`"rounded"`},{value:`"square"`},{value:`"pill"`},{value:`"icon"`}]}},size:{defaultValue:null,description:``,name:`size`,required:!1,type:{name:`enum`,value:[{value:`"medium"`},{value:`"small"`},{value:`"large"`}]}},disabled:{defaultValue:null,description:``,name:`disabled`,required:!1,type:{name:`boolean`}},name:{defaultValue:null,description:``,name:`name`,required:!1,type:{name:`string`}},value:{defaultValue:null,description:``,name:`value`,required:!0,type:{name:`string`}},checked:{defaultValue:null,description:``,name:`checked`,required:!1,type:{name:`boolean | "indeterminate"`}},readOnly:{defaultValue:null,description:``,name:`readOnly`,required:!1,type:{name:`boolean`}},invalid:{defaultValue:null,description:``,name:`invalid`,required:!1,type:{name:`boolean`}},onValueChange:{defaultValue:null,description:``,name:`onValueChange`,required:!1,type:{name:`((value: boolean) => void)`}},onStateChange:{defaultValue:null,description:``,name:`onStateChange`,required:!1,type:{name:`((state: CheckboxState) => void)`}},render:{defaultValue:null,description:``,name:`render`,required:!1,type:{name:`((params: CheckboxRenderParams) => ReactNode)`}},inputProps:{defaultValue:null,description:``,name:`inputProps`,required:!1,type:{name:`Omit<InputHTMLAttributes<HTMLInputElement>, ExcludeAttributes>`}}}}}catch{}try{R.Root.displayName=`Checkbox.Root`,R.Root.__docgenInfo={description:``,displayName:`Checkbox.Root`,props:{value:{defaultValue:null,description:``,name:`value`,required:!0,type:{name:`string`}},name:{defaultValue:null,description:``,name:`name`,required:!1,type:{name:`string`}},invalid:{defaultValue:null,description:``,name:`invalid`,required:!1,type:{name:`boolean`}},disabled:{defaultValue:null,description:``,name:`disabled`,required:!1,type:{name:`boolean`}},readOnly:{defaultValue:null,description:``,name:`readOnly`,required:!1,type:{name:`boolean`}},checked:{defaultValue:null,description:``,name:`checked`,required:!1,type:{name:`boolean | "indeterminate"`}},onValueChange:{defaultValue:null,description:``,name:`onValueChange`,required:!1,type:{name:`((value: boolean) => void)`}},onStateChange:{defaultValue:null,description:``,name:`onStateChange`,required:!1,type:{name:`((state: CheckboxState) => void)`}},render:{defaultValue:null,description:``,name:`render`,required:!1,type:{name:`((params: CheckboxRenderParams) => ReactNode)`}},inputProps:{defaultValue:null,description:``,name:`inputProps`,required:!1,type:{name:`Omit<InputHTMLAttributes<HTMLInputElement>, ExcludeAttributes>`}},variant:{defaultValue:null,description:``,name:`variant`,required:!1,type:{name:`enum`,value:[{value:`"outlined"`},{value:`"label"`}]}},theme:{defaultValue:null,description:``,name:`theme`,required:!1,type:{name:`enum`,value:[{value:`"primary"`},{value:`"secondary"`},{value:`"primaryBlue"`}]}},shape:{defaultValue:null,description:``,name:`shape`,required:!1,type:{name:`enum`,value:[{value:`"rounded"`},{value:`"square"`},{value:`"pill"`},{value:`"icon"`}]}},size:{defaultValue:null,description:``,name:`size`,required:!1,type:{name:`enum`,value:[{value:`"medium"`},{value:`"small"`},{value:`"large"`}]}}}}}catch{}try{R.Text.displayName=`Checkbox.Text`,R.Text.__docgenInfo={description:``,displayName:`Checkbox.Text`,props:{}}}catch{}try{R.ControlBox.displayName=`Checkbox.ControlBox`,R.ControlBox.__docgenInfo={description:``,displayName:`Checkbox.ControlBox`,props:{}}}catch{}try{R.HiddenControl.displayName=`Checkbox.HiddenControl`,R.HiddenControl.__docgenInfo={description:``,displayName:`Checkbox.HiddenControl`,props:{}}}catch{}const Ge={title:`Example/Checkbox`,parameters:{layout:`centered`,docs:{description:{component:`Checkbox is a component that allows users to make selections from a set of options. It can be used in forms, settings, and other interactive elements where multiple selections are allowed.`}}},tags:[`autodocs`],subcomponents:{CheckboxRoot:F,CheckboxText:I,CheckboxControlBox:L,CheckboxHiddenControl:P},argTypes:{controlBoxProps:{control:`object`,description:`Props for the checkbox control box element.`,table:{type:{summary:`React.HTMLAttributes<HTMLDivElement>`}}},textProps:{control:`object`,description:`Props for the checkbox text element.`,table:{type:{summary:`React.HTMLAttributes<HTMLSpanElement>`}}},checkedNode:{control:`text`,description:`Custom node to render inside the checkbox control box when checked.`,table:{type:{summary:`React.ReactNode`}}},...ae({Root:{value:{control:`text`,description:`The value of the checkbox, used to identify the selected option.`,table:{type:{summary:`string`},subcategory:`Root`}},name:{control:`text`,description:`The name of the checkbox, used to group checkboxes together.`,table:{type:{summary:`string`},subcategory:`Root`}},invalid:{control:`boolean`,description:`Indicates whether the checkbox is in an invalid state.`,table:{type:{summary:`boolean`},subcategory:`Root`}},disabled:{control:`boolean`,description:`Indicates whether the checkbox is disabled.`,table:{type:{summary:`boolean`},subcategory:`Root`}},readOnly:{control:`boolean`,description:`Indicates whether the checkbox is read-only.`,table:{type:{summary:`boolean`},subcategory:`Root`}},checked:{control:`boolean`,description:`Indicates whether the checkbox is checked.`,table:{type:{summary:`boolean | "indeterminate"`},subcategory:`Root`}},variant:{control:`select`,options:N.variant,description:`The variant of the checkbox.`,table:{type:{summary:`string`},defaultValue:{summary:`label`},subcategory:`Root`}},theme:{control:`select`,options:N.theme,description:`The theme of the checkbox.`,table:{type:{summary:`string`},defaultValue:{summary:`primary`},subcategory:`Root`}},shape:{control:`select`,options:N.shape,description:`The shape of the checkbox.`,table:{type:{summary:`string`},defaultValue:{summary:`rounded`},subcategory:`Root`}},size:{control:`select`,options:N.size,description:`The size of the checkbox.`,table:{type:{summary:`string`},defaultValue:{summary:`medium`},subcategory:`Root`}},inputProps:{control:`object`,description:`Props for the checkbox input element.`,table:{type:{summary:`React.InputHTMLAttributes<HTMLInputElement>`},subcategory:`Root`}},onValueChange:{description:`Callback function when the checkbox value changes.`,table:{type:{summary:`(value: boolean | "indeterminate") => void`},subcategory:`Root`}},onStateChange:{description:`Callback function when the checkbox state changes.`,table:{type:{summary:`(state: CheckboxState) => void`,detail:`
interface CheckboxState {
  invalid?: boolean
  disabled?: boolean
  readOnly?: boolean
  checked?: 'indeterminate' | boolean
}
              `},subcategory:`Root`}},render:{description:`Custom render function for the checkbox.`,table:{type:{summary:`(params: CheckboxRenderParams) => React.ReactNode`,detail:`
interface CheckboxRenderParams {
  invalid?: boolean
  disabled?: boolean
  readOnly?: boolean
  checked?: 'indeterminate' | boolean
  variant?: "label" | "outlined"
  theme?: "primary" | "secondary" | "primaryBlue"
  shape?: "rounded" | "square" | "pill" | "icon"
  size?: "small" | "large" | "medium"
}
              `},subcategory:`Root`}}}})},render:e=>(0,j.jsx)(R,{...e})};var Ke=Ge;const z={args:{value:`checked`,children:`Checkbox`}},B={args:{value:`checked`,checked:!0,children:`Checkbox`}},V={args:{value:`checked`,checked:`indeterminate`,children:`Checkbox`}},H={args:{value:`checked`,children:`Checkbox`,disabled:!0}},U={args:{value:`checked`,children:`Checkbox`,disabled:!0,checked:!0}},W={args:{value:`checked`,children:`Checkbox`,disabled:!0,checked:`indeterminate`}},G={args:{value:`checked`,children:`Checkbox`,invalid:!0}},K={args:{value:`checked`,children:`Checkbox`,invalid:!0,disabled:!0}},q={args:{value:`checked`,children:`Checkbox`,invalid:!0,checked:!0}},J={args:{value:`checked`,children:`Checkbox`,invalid:!0,disabled:!0,checked:!0}},Y={args:{value:`checked`,children:`Checkbox`,invalid:!0,checked:`indeterminate`}},X={args:{value:`checked`,children:`Checkbox`,invalid:!0,disabled:!0,checked:`indeterminate`}},qe=({title:e,description:t})=>(0,j.jsxs)(`div`,{style:{display:`flex`,flexDirection:`column`,gap:`4px`},children:[e&&(0,j.jsx)(I,{style:{fontSize:`16px`,lineHeight:`24px`,color:`#1D293D`},children:e}),t&&(0,j.jsx)(I,{style:{fontSize:`14px`,lineHeight:`20px`,color:`#90A1B9`},children:t})]}),Je=()=>(0,j.jsxs)(F,{value:`a`,children:[(0,j.jsx)(L,{}),(0,j.jsx)(qe,{title:`Accept terms and conditions A`,description:`You agree to our Terms of Service and Privacy Policy.`})]}),Z={render:()=>(0,j.jsx)(Je,{}),args:{}},Q={render:()=>(0,j.jsxs)(`div`,{style:{display:`flex`,flexDirection:`column`,gap:`16px`},children:[(0,j.jsx)(F,{value:`checked`,variant:`outlined`,children:`Default Button`}),(0,j.jsx)(F,{value:`checked`,variant:`outlined`,checked:!0,children:`Checked Button`}),(0,j.jsx)(F,{value:`checked`,variant:`outlined`,checked:`indeterminate`,children:`Indeterminate Button`}),(0,j.jsx)(F,{value:`checked`,variant:`outlined`,disabled:!0,children:`Disabled Button`}),(0,j.jsx)(F,{value:`checked`,variant:`outlined`,disabled:!0,checked:!0,children:`Disabled Checked Button`}),(0,j.jsx)(F,{value:`checked`,variant:`outlined`,invalid:!0,children:`Invalid Button`}),(0,j.jsx)(F,{value:`checked`,variant:`outlined`,invalid:!0,disabled:!0,children:`Invalid Disabled Button`}),(0,j.jsx)(F,{value:`checked`,variant:`outlined`,invalid:!0,checked:!0,children:`Checked Invalid Button`}),(0,j.jsx)(F,{value:`checked`,variant:`outlined`,invalid:!0,checked:!0,disabled:!0,children:`Checked Disabled Invalid Button`}),(0,j.jsx)(F,{value:`checked`,variant:`outlined`,invalid:!0,checked:`indeterminate`,children:`Invalid Indeterminate Button`}),(0,j.jsx)(F,{value:`checked`,variant:`outlined`,invalid:!0,disabled:!0,checked:`indeterminate`,children:`Invalid Disabled Indeterminate Button`})]}),args:{value:`checked`,children:`Checkbox Button`,variant:`outlined`}},Ye=({checked:e})=>({display:`flex`,alignItems:`center`,gap:`16px`,background:`transparent`,color:`var(--radio-color-default)`,border:`1px solid`,borderColor:e?`var(--radio-color-selected)`:`var(--radio-color-default)`,padding:`12px 16px`,borderRadius:`8px`,cursor:`pointer`});function Xe(){return(0,j.jsx)(F,{value:`checked`,render:({checked:e})=>(0,j.jsxs)(`div`,{style:Ye({checked:e}),children:[(0,j.jsx)(I,{children:`Checkbox`}),(0,j.jsx)(L,{})]})})}const $={args:{render:e=>(0,j.jsx)(Xe,{...e})}};z.parameters={...z.parameters,docs:{...(oe=z.parameters)?.docs,source:{originalSource:`{
  args: {
    value: 'checked',
    children: 'Checkbox'
  }
}`,...(g=z.parameters)==null||(g=g.docs)==null?void 0:g.source}}},B.parameters={...B.parameters,docs:{...(se=B.parameters)?.docs,source:{originalSource:`{
  args: {
    value: 'checked',
    checked: true,
    children: 'Checkbox'
  }
}`,...(_=B.parameters)==null||(_=_.docs)==null?void 0:_.source}}},V.parameters={...V.parameters,docs:{...(ce=V.parameters)?.docs,source:{originalSource:`{
  args: {
    value: 'checked',
    checked: 'indeterminate',
    children: 'Checkbox'
  }
}`,...(v=V.parameters)==null||(v=v.docs)==null?void 0:v.source}}},H.parameters={...H.parameters,docs:{...(y=H.parameters)?.docs,source:{originalSource:`{
  args: {
    value: 'checked',
    children: 'Checkbox',
    disabled: true
  }
}`,...(b=H.parameters)==null||(b=b.docs)==null?void 0:b.source}}},U.parameters={...U.parameters,docs:{...(le=U.parameters)?.docs,source:{originalSource:`{
  args: {
    value: 'checked',
    children: 'Checkbox',
    disabled: true,
    checked: true
  }
}`,...(x=U.parameters)==null||(x=x.docs)==null?void 0:x.source}}},W.parameters={...W.parameters,docs:{...(ue=W.parameters)?.docs,source:{originalSource:`{
  args: {
    value: 'checked',
    children: 'Checkbox',
    disabled: true,
    checked: 'indeterminate'
  }
}`,...(S=W.parameters)==null||(S=S.docs)==null?void 0:S.source}}},G.parameters={...G.parameters,docs:{...(de=G.parameters)?.docs,source:{originalSource:`{
  args: {
    value: 'checked',
    children: 'Checkbox',
    invalid: true
  }
}`,...(fe=G.parameters)==null||(fe=fe.docs)==null?void 0:fe.source}}},K.parameters={...K.parameters,docs:{...(pe=K.parameters)?.docs,source:{originalSource:`{
  args: {
    value: 'checked',
    children: 'Checkbox',
    invalid: true,
    disabled: true
  }
}`,...(me=K.parameters)==null||(me=me.docs)==null?void 0:me.source}}},q.parameters={...q.parameters,docs:{...(he=q.parameters)?.docs,source:{originalSource:`{
  args: {
    value: 'checked',
    children: 'Checkbox',
    invalid: true,
    checked: true
  }
}`,...(ge=q.parameters)==null||(ge=ge.docs)==null?void 0:ge.source}}},J.parameters={...J.parameters,docs:{...(_e=J.parameters)?.docs,source:{originalSource:`{
  args: {
    value: 'checked',
    children: 'Checkbox',
    invalid: true,
    disabled: true,
    checked: true
  }
}`,...(ve=J.parameters)==null||(ve=ve.docs)==null?void 0:ve.source}}},Y.parameters={...Y.parameters,docs:{...(ye=Y.parameters)?.docs,source:{originalSource:`{
  args: {
    value: 'checked',
    children: 'Checkbox',
    invalid: true,
    checked: 'indeterminate'
  }
}`,...(C=Y.parameters)==null||(C=C.docs)==null?void 0:C.source}}},X.parameters={...X.parameters,docs:{...(be=X.parameters)?.docs,source:{originalSource:`{
  args: {
    value: 'checked',
    children: 'Checkbox',
    invalid: true,
    disabled: true,
    checked: 'indeterminate'
  }
}`,...(w=X.parameters)==null||(w=w.docs)==null?void 0:w.source}}},Z.parameters={...Z.parameters,docs:{...(xe=Z.parameters)?.docs,source:{originalSource:`{
  render: () => <CustomExample />,
  args: {}
}`,...(T=Z.parameters)==null||(T=T.docs)==null?void 0:T.source}}},Q.parameters={...Q.parameters,docs:{...(Se=Q.parameters)?.docs,source:{originalSource:`{
  render: () => <div style={{
    display: 'flex',
    flexDirection: 'column',
    gap: '16px'
  }}>
      <CheckboxRoot value="checked" variant="outlined">
        Default Button
      </CheckboxRoot>
      <CheckboxRoot value="checked" variant="outlined" checked>
        Checked Button
      </CheckboxRoot>
      <CheckboxRoot value="checked" variant="outlined" checked="indeterminate">
        Indeterminate Button
      </CheckboxRoot>
      <CheckboxRoot value="checked" variant="outlined" disabled>
        Disabled Button
      </CheckboxRoot>
      <CheckboxRoot value="checked" variant="outlined" disabled checked>
        Disabled Checked Button
      </CheckboxRoot>
      <CheckboxRoot value="checked" variant="outlined" invalid>
        Invalid Button
      </CheckboxRoot>
      <CheckboxRoot value="checked" variant="outlined" invalid disabled>
        Invalid Disabled Button
      </CheckboxRoot>
      <CheckboxRoot value="checked" variant="outlined" invalid checked>
        Checked Invalid Button
      </CheckboxRoot>
      <CheckboxRoot value="checked" variant="outlined" invalid checked disabled>
        Checked Disabled Invalid Button
      </CheckboxRoot>
      <CheckboxRoot value="checked" variant="outlined" invalid checked="indeterminate">
        Invalid Indeterminate Button
      </CheckboxRoot>
      <CheckboxRoot value="checked" variant="outlined" invalid disabled checked="indeterminate">
        Invalid Disabled Indeterminate Button
      </CheckboxRoot>
    </div>,
  args: {
    value: 'checked',
    children: 'Checkbox Button',
    variant: 'outlined'
  }
}`,...(E=Q.parameters)==null||(E=E.docs)==null?void 0:E.source}}},$.parameters={...$.parameters,docs:{...(Ce=$.parameters)?.docs,source:{originalSource:`{
  args: {
    render: (args: object) => <CustomButtonCheckboxExample {...args} />
  }
}`,...(D=$.parameters)==null||(D=D.docs)==null?void 0:D.source}}};const Ze=[`Base`,`Checked`,`Indeterminate`,`Disabled`,`SelectedDisabled`,`CheckedDisabled`,`Invalid`,`InvalidDisabled`,`InvalidChecked`,`InvalidCheckedDisabled`,`InvalidIndeterminate`,`InvalidDisabledIndeterminate`,`CustomCheckbox`,`CheckboxButton`,`CustomRender`];export{z as Base,Q as CheckboxButton,B as Checked,W as CheckedDisabled,Z as CustomCheckbox,$ as CustomRender,H as Disabled,V as Indeterminate,G as Invalid,q as InvalidChecked,J as InvalidCheckedDisabled,K as InvalidDisabled,X as InvalidDisabledIndeterminate,Y as InvalidIndeterminate,U as SelectedDisabled,Ze as __namedExportsOrder,Ke as default};