import{__toESM as e,require_react as t}from"./iframe-BrZWt-XD.js";import{require_jsx_runtime as n}from"./jsx-runtime-BNG85-6G.js";import"./react-dom-C4w7aAI6.js";import{sva as r}from"./css-ZYFbfL-P.js";import{ariaAttr as i,createSplitProps as a,dataAttr as o,dispatchInputValueEvent as s,getBeforeInputValue as c,getEventKey as ee,getNativeEvent as te,invariant as l,isComposingEvent as ne,isEqual as u,isHTMLElement as re,isModifierKey as ie,mergeProps as d,queryAll as f,raf as p,setValueAtIndex as m,setup as h,visuallyHiddenStyle as ae}from"./dist-20u2P0-x.js";import{createProps as oe,normalizeProps as se,useMachine as ce}from"./dist-BVNP-VdT.js";/* empty css               */import{createAnatomy as le}from"./dist-HlFFkDwW.js";import{defineArgs as ue}from"./defineMeta-DirHKiSK.js";import{InputContext as de}from"./Input.context-DfG6c7O6.js";var fe,g,pe,_,me,v,he,y,ge,b,_e,x,ve,S,ye,C,be,w,xe,T,Se,E,Ce,D,we,O,Te=le(`pinInput`).parts(`root`,`label`,`input`,`control`),k=Te.build(),A=e=>{var t;return(t=e.ids)?.root??`pin-input:${e.id}`},Ee=(e,t)=>{var n,r;return((n=e.ids)==null||(r=n.input)==null?void 0:r.call(n,t))??`pin-input:${e.id}:${t}`},De=e=>{var t;return(t=e.ids)?.hiddenInput??`pin-input:${e.id}:hidden`},Oe=e=>{var t;return(t=e.ids)?.label??`pin-input:${e.id}:label`},ke=e=>{var t;return(t=e.ids)?.control??`pin-input:${e.id}:control`},Ae=e=>e.getById(A(e)),j=e=>{let t=CSS.escape(A(e)),n=`input[data-ownedby=${t}]`;return f(Ae(e),n)},M=(e,t)=>j(e)[t],je=e=>j(e)[0],Me=e=>e.getById(De(e)),N=(e,t)=>{e.value=t,e.setAttribute(`value`,t)},Ne={numeric:/^[0-9]+$/,alphabetic:/^[A-Za-z]+$/,alphanumeric:/^[a-zA-Z0-9]+$/i};function Pe(e,t){var n;return e?!!(n=Ne[e])?.test(t):!0}function Fe(e,t,n){if(!n)return Pe(t,e);let r=new RegExp(n,`g`);return r.test(e)}function Ie(e,t){let{send:n,context:r,computed:a,prop:s,scope:u}=e,d=a(`isValueComplete`),f=s(`invalid`),p=s(`translations`),m=r.get(`focusedIndex`);function h(){var e;(e=je(u))?.focus()}return{focus:h,count:r.get(`count`),items:Array.from({length:r.get(`count`)}).map((e,t)=>t),value:r.get(`value`),valueAsString:a(`valueAsString`),complete:d,setValue(e){Array.isArray(e)||l(`[pin-input/setValue] value must be an array`),n({type:`VALUE.SET`,value:e})},clearValue(){n({type:`VALUE.CLEAR`})},setValueAtIndex(e,t){n({type:`VALUE.SET`,value:t,index:e})},getRootProps(){return t.element({dir:s(`dir`),...k.root.attrs,id:A(u),"data-invalid":o(f),"data-disabled":o(s(`disabled`)),"data-complete":o(d),"data-readonly":o(s(`readOnly`))})},getLabelProps(){return t.label({...k.label.attrs,dir:s(`dir`),htmlFor:De(u),id:Oe(u),"data-invalid":o(f),"data-disabled":o(s(`disabled`)),"data-complete":o(d),"data-readonly":o(s(`readOnly`)),onClick(e){e.preventDefault(),h()}})},getHiddenInputProps(){return t.input({"aria-hidden":!0,type:`text`,tabIndex:-1,id:De(u),readOnly:s(`readOnly`),disabled:s(`disabled`),required:s(`required`),name:s(`name`),form:s(`form`),style:ae,maxLength:a(`valueLength`),defaultValue:a(`valueAsString`)})},getControlProps(){return t.element({...k.control.attrs,dir:s(`dir`),id:ke(u)})},getInputProps(e){var l;let{index:h}=e,ae=s(`type`)===`numeric`?`tel`:`text`;return t.input({...k.input.attrs,dir:s(`dir`),disabled:s(`disabled`),"data-disabled":o(s(`disabled`)),"data-complete":o(d),id:Ee(u,h.toString()),"data-index":h,"data-ownedby":A(u),"aria-label":p==null||(l=p.inputLabel)==null?void 0:l.call(p,h,a(`valueLength`)),inputMode:s(`otp`)||s(`type`)===`numeric`?`numeric`:`text`,"aria-invalid":i(f),"data-invalid":o(f),type:s(`mask`)?`password`:ae,defaultValue:r.get(`value`)[h]||``,readOnly:s(`readOnly`),autoCapitalize:`none`,autoComplete:s(`otp`)?`one-time-code`:`off`,placeholder:m===h?``:s(`placeholder`),onBeforeInput(e){try{let t=c(e),r=Fe(t,s(`type`),s(`pattern`));r||(n({type:`VALUE.INVALID`,value:t}),e.preventDefault()),t.length>2&&e.currentTarget.setSelectionRange(0,1,`forward`)}catch{}},onChange(e){let t=te(e),{value:r}=e.currentTarget;if(t.inputType===`insertFromPaste`||r.length>2){n({type:`INPUT.PASTE`,value:r}),e.currentTarget.value=r[0],e.preventDefault();return}if(t.inputType===`deleteContentBackward`){n({type:`INPUT.BACKSPACE`});return}n({type:`INPUT.CHANGE`,value:r,index:h})},onKeyDown(e){if(e.defaultPrevented||ne(e)||ie(e))return;let t={Backspace(){n({type:`INPUT.BACKSPACE`})},Delete(){n({type:`INPUT.DELETE`})},ArrowLeft(){n({type:`INPUT.ARROW_LEFT`})},ArrowRight(){n({type:`INPUT.ARROW_RIGHT`})},Enter(){n({type:`INPUT.ENTER`})}},r=t[ee(e,{dir:s(`dir`),orientation:`horizontal`})];r&&(r(e),e.preventDefault())},onFocus(){n({type:`INPUT.FOCUS`,index:h})},onBlur(e){let t=e.relatedTarget;re(t)&&t.dataset.ownedby===A(u)||n({type:`INPUT.BLUR`,index:h})}})}}}var{choose:Le,createMachine:Re}=h(),ze=Re({props({props:e}){return{placeholder:`â—‹`,otp:!1,type:`numeric`,defaultValue:e.count?P([],e.count):[],...e,translations:{inputLabel:(e,t)=>`pin code ${e+1} of ${t}`,...e.translations}}},initialState(){return`idle`},context({prop:e,bindable:t}){return{value:t(()=>({value:e(`value`),defaultValue:e(`defaultValue`),isEqual:u,onChange(t){var n;(n=e(`onValueChange`))?.({value:t,valueAsString:t.join(``)})}})),focusedIndex:t(()=>({sync:!0,defaultValue:-1})),count:t(()=>({defaultValue:e(`count`)}))}},computed:{_value:({context:e})=>P(e.get(`value`),e.get(`count`)),valueLength:({computed:e})=>e(`_value`).length,filledValueLength:({computed:e})=>e(`_value`).filter(e=>e?.trim()!==``).length,isValueComplete:({computed:e})=>e(`valueLength`)===e(`filledValueLength`),valueAsString:({computed:e})=>e(`_value`).join(``),focusedValue:({computed:e,context:t})=>e(`_value`)[t.get(`focusedIndex`)]||``},entry:Le([{guard:`autoFocus`,actions:[`setInputCount`,`setFocusIndexToFirst`]},{actions:[`setInputCount`]}]),watch({action:e,track:t,context:n,computed:r}){t([()=>n.get(`focusedIndex`)],()=>{e([`focusInput`,`selectInputIfNeeded`])}),t([()=>n.get(`value`).join(`,`)],()=>{e([`syncInputElements`,`dispatchInputEvent`])}),t([()=>r(`isValueComplete`)],()=>{e([`invokeOnComplete`,`blurFocusedInputIfNeeded`])})},on:{"VALUE.SET":[{guard:`hasIndex`,actions:[`setValueAtIndex`]},{actions:[`setValue`]}],"VALUE.CLEAR":{actions:[`clearValue`,`setFocusIndexToFirst`]}},states:{idle:{on:{"INPUT.FOCUS":{target:`focused`,actions:[`setFocusedIndex`]}}},focused:{on:{"INPUT.CHANGE":{actions:[`setFocusedValue`,`syncInputValue`,`setNextFocusedIndex`]},"INPUT.PASTE":{actions:[`setPastedValue`,`setLastValueFocusIndex`]},"INPUT.FOCUS":{actions:[`setFocusedIndex`]},"INPUT.BLUR":{target:`idle`,actions:[`clearFocusedIndex`]},"INPUT.DELETE":{guard:`hasValue`,actions:[`clearFocusedValue`]},"INPUT.ARROW_LEFT":{actions:[`setPrevFocusedIndex`]},"INPUT.ARROW_RIGHT":{actions:[`setNextFocusedIndex`]},"INPUT.BACKSPACE":[{guard:`hasValue`,actions:[`clearFocusedValue`]},{actions:[`setPrevFocusedIndex`,`clearFocusedValue`]}],"INPUT.ENTER":{guard:`isValueComplete`,actions:[`requestFormSubmit`]},"VALUE.INVALID":{actions:[`invokeOnInvalid`]}}}},implementations:{guards:{autoFocus:({prop:e})=>!!e(`autoFocus`),hasValue:({context:e})=>e.get(`value`)[e.get(`focusedIndex`)]!==``,isValueComplete:({computed:e})=>e(`isValueComplete`),hasIndex:({event:e})=>e.index!==void 0},actions:{dispatchInputEvent({computed:e,scope:t}){let n=Me(t);s(n,{value:e(`valueAsString`)})},setInputCount({scope:e,context:t,prop:n}){if(n(`count`))return;let r=j(e);t.set(`count`,r.length)},focusInput({context:e,scope:t}){var n;let r=e.get(`focusedIndex`);r!==-1&&(n=M(t,r))?.focus({preventScroll:!0})},selectInputIfNeeded({context:e,prop:t,scope:n}){let r=e.get(`focusedIndex`);!t(`selectOnFocus`)||r===-1||p(()=>{var e;(e=M(n,r))?.select()})},invokeOnComplete({computed:e,prop:t}){var n;e(`isValueComplete`)&&(n=t(`onValueComplete`))?.({value:e(`_value`),valueAsString:e(`valueAsString`)})},invokeOnInvalid({context:e,event:t,prop:n}){var r;(r=n(`onValueInvalid`))?.({value:t.value,index:e.get(`focusedIndex`)})},clearFocusedIndex({context:e}){e.set(`focusedIndex`,-1)},setFocusedIndex({context:e,event:t}){e.set(`focusedIndex`,t.index)},setValue({context:e,event:t}){let n=P(t.value,e.get(`count`));e.set(`value`,n)},setFocusedValue({context:e,event:t,computed:n,flush:r}){let i=n(`focusedValue`),a=e.get(`focusedIndex`),o=Be(i,t.value);r(()=>{e.set(`value`,m(n(`_value`),a,o))})},revertInputValue({context:e,computed:t,scope:n}){let r=M(n,e.get(`focusedIndex`));N(r,t(`focusedValue`))},syncInputValue({context:e,event:t,scope:n}){let r=e.get(`value`),i=M(n,t.index);N(i,r[t.index])},syncInputElements({context:e,scope:t}){let n=j(t),r=e.get(`value`);n.forEach((e,t)=>{N(e,r[t])})},setPastedValue({context:e,event:t,computed:n,flush:r}){p(()=>{let i=n(`valueAsString`),a=e.get(`focusedIndex`),o=n(`valueLength`),s=n(`filledValueLength`),c=Math.min(a,s),ee=c>0?i.substring(0,a):``,te=t.value.substring(0,o-c),l=P(`${ee}${te}`.split(``),o);r(()=>{e.set(`value`,l)})})},setValueAtIndex({context:e,event:t,computed:n}){let r=Be(n(`focusedValue`),t.value);e.set(`value`,m(n(`_value`),t.index,r))},clearValue({context:e}){let t=Array.from({length:e.get(`count`)}).fill(``);queueMicrotask(()=>{e.set(`value`,t)})},clearFocusedValue({context:e,computed:t}){let n=e.get(`focusedIndex`);n!==-1&&e.set(`value`,m(t(`_value`),n,``))},setFocusIndexToFirst({context:e}){e.set(`focusedIndex`,0)},setNextFocusedIndex({context:e,computed:t}){e.set(`focusedIndex`,Math.min(e.get(`focusedIndex`)+1,t(`valueLength`)-1))},setPrevFocusedIndex({context:e}){e.set(`focusedIndex`,Math.max(e.get(`focusedIndex`)-1,0))},setLastValueFocusIndex({context:e,computed:t}){p(()=>{e.set(`focusedIndex`,Math.min(t(`filledValueLength`),t(`valueLength`)-1))})},blurFocusedInputIfNeeded({context:e,prop:t,scope:n}){t(`blurOnComplete`)&&p(()=>{var t;(t=M(n,e.get(`focusedIndex`)))?.blur()})},requestFormSubmit({computed:e,prop:t,scope:n}){var r;if(!t(`name`)||!e(`isValueComplete`))return;let i=Me(n);i==null||(r=i.form)==null||r.requestSubmit()}}}});function Be(e,t){let n=t;return e[0]===t[0]?n=t[1]:e[0]===t[1]&&(n=t[0]),n.split(``)[n.length-1]}function P(e,t){return Array.from({length:t}).fill(``).map((t,n)=>e[n]||t)}var Ve=oe()([`autoFocus`,`blurOnComplete`,`count`,`defaultValue`,`dir`,`disabled`,`form`,`getRootNode`,`id`,`ids`,`invalid`,`mask`,`name`,`onValueChange`,`onValueComplete`,`onValueInvalid`,`otp`,`pattern`,`placeholder`,`readOnly`,`required`,`selectOnFocus`,`translations`,`type`,`value`]),He=a(Ve);const Ue=r({slots:[`root`,`row`,`box`,`inputBox`,`input`],base:{root:{display:`flex`,flexDirection:`column`,gap:`2`,height:`100%`},row:{height:`100%`,display:`flex`,alignItems:`center`,gap:`2`},box:{flexGrow:1,overflow:`hidden`,height:`100%`},inputBox:{position:`relative`},input:{position:`absolute`,inset:0,height:`100%`,width:`100%`,display:`flex`,color:`{colors.input.text}`,backgroundColor:`white`,border:`1px solid`,borderColor:`{colors.input.default}`,borderRadius:`lg`,textAlign:`center`,fontSize:`4xl`,fontWeight:`900`,_focus:{outline:`none`,borderColor:`{colors.input.focus}`,boxShadow:`0 0 0 1px {colors.input.focus}`},"&[data-disabled]":{color:`{colors.input.disabledText}`,borderColor:`{colors.input.disabled}`,backgroundColor:`{colors.input.disabledFill}`,cursor:`not-allowed`},"&[data-invalid]":{borderColor:`{colors.input.invalid}`,_focus:{borderColor:`{colors.input.invalidFocus}`,boxShadow:`0 0 0 1px {colors.input.invalidFocus}`}}}},defaultVariants:{inputHeight:`square`},variants:{inputHeight:{auto:{inputBox:{height:`100%`}},square:{inputBox:{paddingTop:`100%`}}}}}),We=e=>{let t=Ue.getVariantProps(e);return Ue(t)},Ge=Ue.variantMap;var F=e(t()),I=e(n());const Ke=(0,F.createContext)(null);function qe(){let e=(0,F.useContext)(Ke);if(!e)throw Error(`usePinInputContext must be used within a PinInputProvider`);return e}function L({id:e,value:t,defaultValue:n,placeholder:r=`â—‹`,type:i=`alphanumeric`,mask:a,otp:o,disabled:s,invalid:c,readOnly:ee,autoFocus:te,blurOnComplete:l,children:ne,onValueChange:u,onValueComplete:re,onValueInvalid:ie,inputHeight:d,...f}){let p=(0,F.useId)(),m={id:e||p,value:t,defaultValue:n,placeholder:r,mask:a,otp:o,type:i,disabled:s,invalid:c,readOnly:ee,autoFocus:te,blurOnComplete:l,onValueChange:e=>{u?.(e.value)},onValueComplete:e=>{re?.(e.value)},onValueInvalid:e=>{ie?.(e.value)}},h=ce(ze,m),ae=Ie(h,se),oe=We({inputHeight:d});return(0,I.jsx)(Ke.Provider,{value:{api:ae,styles:oe},children:(0,I.jsx)(de.Provider,{value:{"aria-label":``,"aria-labelledby":``,"aria-describedby":``},children:(0,I.jsx)(`div`,{role:`group`,...f,children:ne})})})}function R({children:e,...t}){let{api:n,styles:r}=qe();return(0,I.jsx)(`div`,{...d(n.getRootProps(),t,{className:r.row}),children:e})}function z({index:e,inputProps:t={},invalid:n,...r}){let{api:i,styles:a}=qe(),o=(0,F.useContext)(de)||{};return(0,I.jsx)(`div`,{...d(r,{className:a.box}),children:(0,I.jsx)(`div`,{className:a.inputBox,children:(0,I.jsx)(`input`,{...d(i.getInputProps({index:e}),o,t,{className:a.input,"aria-invalid":n?`true`:void 0})})})})}function B({length:e=4,...t}){return(0,I.jsx)(L,{...t,children:(0,I.jsx)(R,{children:Array.from({length:e},(e,t)=>(0,I.jsx)(z,{index:t},t))})})}B.Root=L,B.Row=R,B.Box=z;try{L.displayName=`PinInputRoot`,L.__docgenInfo={description:``,displayName:`PinInputRoot`,props:{id:{defaultValue:null,description:``,name:`id`,required:!1,type:{name:`string`}},onValueChange:{defaultValue:null,description:``,name:`onValueChange`,required:!1,type:{name:`((value: string[]) => void)`}},onValueComplete:{defaultValue:null,description:``,name:`onValueComplete`,required:!1,type:{name:`((value: string[]) => void)`}},onValueInvalid:{defaultValue:null,description:``,name:`onValueInvalid`,required:!1,type:{name:`((value: string) => void)`}},value:{defaultValue:null,description:``,name:`value`,required:!1,type:{name:`string[]`}},defaultValue:{defaultValue:null,description:``,name:`defaultValue`,required:!1,type:{name:`string[]`}},placeholder:{defaultValue:{value:`â—‹`},description:``,name:`placeholder`,required:!1,type:{name:`string`}},mask:{defaultValue:null,description:``,name:`mask`,required:!1,type:{name:`boolean`}},otp:{defaultValue:null,description:``,name:`otp`,required:!1,type:{name:`boolean`}},type:{defaultValue:{value:`alphanumeric`},description:``,name:`type`,required:!1,type:{name:`enum`,value:[{value:`"numeric"`},{value:`"alphanumeric"`},{value:`"alphabetic"`}]}},disabled:{defaultValue:null,description:``,name:`disabled`,required:!1,type:{name:`boolean`}},invalid:{defaultValue:null,description:``,name:`invalid`,required:!1,type:{name:`boolean`}},readOnly:{defaultValue:null,description:``,name:`readOnly`,required:!1,type:{name:`boolean`}},autoFocus:{defaultValue:null,description:``,name:`autoFocus`,required:!1,type:{name:`boolean`}},blurOnComplete:{defaultValue:null,description:``,name:`blurOnComplete`,required:!1,type:{name:`boolean`}},inputHeight:{defaultValue:null,description:``,name:`inputHeight`,required:!1,type:{name:`enum`,value:[{value:`"square"`},{value:`"auto"`}]}}}}}catch{}try{R.displayName=`PinInputRow`,R.__docgenInfo={description:``,displayName:`PinInputRow`,props:{}}}catch{}try{z.displayName=`PinInputBox`,z.__docgenInfo={description:``,displayName:`PinInputBox`,props:{index:{defaultValue:null,description:``,name:`index`,required:!0,type:{name:`number`}},value:{defaultValue:null,description:``,name:`value`,required:!1,type:{name:`string`}},disabled:{defaultValue:null,description:``,name:`disabled`,required:!1,type:{name:`boolean`}},invalid:{defaultValue:null,description:``,name:`invalid`,required:!1,type:{name:`boolean`}},readOnly:{defaultValue:null,description:``,name:`readOnly`,required:!1,type:{name:`boolean`}},inputProps:{defaultValue:{value:`{}`},description:``,name:`inputProps`,required:!1,type:{name:`InputHTMLAttributes<HTMLInputElement>`}}}}}catch{}try{B.displayName=`PinInput`,B.__docgenInfo={description:``,displayName:`PinInput`,props:{length:{defaultValue:{value:`4`},description:``,name:`length`,required:!1,type:{name:`number`}},mask:{defaultValue:null,description:``,name:`mask`,required:!1,type:{name:`boolean`}},disabled:{defaultValue:null,description:``,name:`disabled`,required:!1,type:{name:`boolean`}},type:{defaultValue:null,description:``,name:`type`,required:!1,type:{name:`enum`,value:[{value:`"numeric"`},{value:`"alphanumeric"`},{value:`"alphabetic"`}]}},value:{defaultValue:null,description:``,name:`value`,required:!1,type:{name:`string[]`}},defaultValue:{defaultValue:null,description:``,name:`defaultValue`,required:!1,type:{name:`string[]`}},autoFocus:{defaultValue:null,description:``,name:`autoFocus`,required:!1,type:{name:`boolean`}},id:{defaultValue:null,description:``,name:`id`,required:!1,type:{name:`string`}},placeholder:{defaultValue:null,description:``,name:`placeholder`,required:!1,type:{name:`string`}},readOnly:{defaultValue:null,description:``,name:`readOnly`,required:!1,type:{name:`boolean`}},invalid:{defaultValue:null,description:``,name:`invalid`,required:!1,type:{name:`boolean`}},onValueChange:{defaultValue:null,description:``,name:`onValueChange`,required:!1,type:{name:`((value: string[]) => void)`}},onValueComplete:{defaultValue:null,description:``,name:`onValueComplete`,required:!1,type:{name:`((value: string[]) => void)`}},onValueInvalid:{defaultValue:null,description:``,name:`onValueInvalid`,required:!1,type:{name:`((value: string) => void)`}},otp:{defaultValue:null,description:``,name:`otp`,required:!1,type:{name:`boolean`}},blurOnComplete:{defaultValue:null,description:``,name:`blurOnComplete`,required:!1,type:{name:`boolean`}},inputHeight:{defaultValue:null,description:``,name:`inputHeight`,required:!1,type:{name:`enum`,value:[{value:`"square"`},{value:`"auto"`}]}}}}}catch{}try{B.Root.displayName=`PinInput.Root`,B.Root.__docgenInfo={description:``,displayName:`PinInput.Root`,props:{id:{defaultValue:null,description:``,name:`id`,required:!1,type:{name:`string`}},onValueChange:{defaultValue:null,description:``,name:`onValueChange`,required:!1,type:{name:`((value: string[]) => void)`}},onValueComplete:{defaultValue:null,description:``,name:`onValueComplete`,required:!1,type:{name:`((value: string[]) => void)`}},onValueInvalid:{defaultValue:null,description:``,name:`onValueInvalid`,required:!1,type:{name:`((value: string) => void)`}},value:{defaultValue:null,description:``,name:`value`,required:!1,type:{name:`string[]`}},defaultValue:{defaultValue:null,description:``,name:`defaultValue`,required:!1,type:{name:`string[]`}},placeholder:{defaultValue:{value:`â—‹`},description:``,name:`placeholder`,required:!1,type:{name:`string`}},mask:{defaultValue:null,description:``,name:`mask`,required:!1,type:{name:`boolean`}},otp:{defaultValue:null,description:``,name:`otp`,required:!1,type:{name:`boolean`}},type:{defaultValue:{value:`alphanumeric`},description:``,name:`type`,required:!1,type:{name:`enum`,value:[{value:`"numeric"`},{value:`"alphanumeric"`},{value:`"alphabetic"`}]}},disabled:{defaultValue:null,description:``,name:`disabled`,required:!1,type:{name:`boolean`}},invalid:{defaultValue:null,description:``,name:`invalid`,required:!1,type:{name:`boolean`}},readOnly:{defaultValue:null,description:``,name:`readOnly`,required:!1,type:{name:`boolean`}},autoFocus:{defaultValue:null,description:``,name:`autoFocus`,required:!1,type:{name:`boolean`}},blurOnComplete:{defaultValue:null,description:``,name:`blurOnComplete`,required:!1,type:{name:`boolean`}},inputHeight:{defaultValue:null,description:``,name:`inputHeight`,required:!1,type:{name:`enum`,value:[{value:`"square"`},{value:`"auto"`}]}}}}}catch{}try{B.Row.displayName=`PinInput.Row`,B.Row.__docgenInfo={description:``,displayName:`PinInput.Row`,props:{}}}catch{}try{B.Box.displayName=`PinInput.Box`,B.Box.__docgenInfo={description:``,displayName:`PinInput.Box`,props:{index:{defaultValue:null,description:``,name:`index`,required:!0,type:{name:`number`}},value:{defaultValue:null,description:``,name:`value`,required:!1,type:{name:`string`}},disabled:{defaultValue:null,description:``,name:`disabled`,required:!1,type:{name:`boolean`}},invalid:{defaultValue:null,description:``,name:`invalid`,required:!1,type:{name:`boolean`}},readOnly:{defaultValue:null,description:``,name:`readOnly`,required:!1,type:{name:`boolean`}},inputProps:{defaultValue:{value:`{}`},description:``,name:`inputProps`,required:!1,type:{name:`InputHTMLAttributes<HTMLInputElement>`}}}}}catch{}const Je={title:`Example/PinInput`,parameters:{layout:`centered`,docs:{description:{component:`PinInput is a component that allows users to enter a sequence of digits or characters, commonly used for OTP verification, PIN codes, and security codes.`}}},tags:[`autodocs`],subcomponents:{PinInputRoot:L,PinInputRow:R,PinInputBox:z},argTypes:{...ue({Root:{placeholder:{control:`text`,description:`Placeholder character for empty inputs.`,table:{type:{summary:`string`}}},type:{control:`select`,options:[`alphanumeric`,`numeric`,`alphabetic`],description:`Type of characters allowed in the input.`,table:{type:{summary:`string`},defaultValue:{summary:`alphanumeric`}}},mask:{control:`boolean`,description:`Whether to mask the input characters.`,table:{type:{summary:`boolean`},defaultValue:{summary:`false`}}},otp:{control:`boolean`,description:`Whether this is for OTP (one-time password) input.`,table:{type:{summary:`boolean`},defaultValue:{summary:`false`}}},disabled:{control:`boolean`,description:`Whether the input is disabled.`,table:{type:{summary:`boolean`},defaultValue:{summary:`false`}}},invalid:{control:`boolean`,description:`Whether the input is in an invalid state.`,table:{type:{summary:`boolean`},defaultValue:{summary:`false`}}},onValueChange:{description:`Callback function when the pin input value changes.`,table:{type:{summary:`(value: string[]) => void`}}},onValueComplete:{description:`Callback function when all pin inputs are filled.`,table:{type:{summary:`(value: string[]) => void`}}}},Box:{index:{control:`number`,description:`Index of the pin input box in the row.`,table:{type:{summary:`number`}}},value:{control:`text`,description:`Value of the pin input box.`,table:{type:{summary:`string`}}},disabled:{control:`boolean`,description:`Whether the pin input box is disabled.`,table:{type:{summary:`boolean`},defaultValue:{summary:`false`}}},invalid:{control:`boolean`,description:`Whether the pin input box is in an invalid state.`,table:{type:{summary:`boolean`},defaultValue:{summary:`false`}}},readOnly:{control:`boolean`,description:`Whether the pin input box is read-only.`,table:{type:{summary:`boolean`},defaultValue:{summary:`false`}}}}})},render:e=>(0,I.jsx)(B,{...e})};var Ye=Je;const V={args:{length:4}},H={args:{length:6}},U={args:{length:4,type:`numeric`}},W={args:{length:4,type:`alphabetic`}},G={args:{length:4,mask:!0}},K={args:{length:6,otp:!0,type:`numeric`}},q={args:{length:4,disabled:!0}},J={args:{length:4,invalid:!0}},Y={args:{length:4,placeholder:`_`}},X={args:{defaultValue:[`1`,`2`,``,``]}},Xe=()=>{let[e,t]=(0,F.useState)([``,``,``,``]);return(0,I.jsx)(L,{value:e,onValueChange:t,children:(0,I.jsxs)(R,{children:[(0,I.jsx)(z,{index:0}),(0,I.jsx)(z,{index:1}),(0,I.jsx)(z,{index:2}),(0,I.jsx)(z,{index:3})]})})},Z={render:()=>(0,I.jsx)(Xe,{}),args:{},parameters:{docs:{source:{language:`tsx`,code:`
const ControllerExample = () => {
  const [value, setValue] = useState(['', '', '', ''])
  return (
    <PinInputRoot value={value} onValueChange={setValue}>
      <PinInputRow>
        {value.map((val, index) => (
          <PinInputBox key={index} index={index} value={val} />
        ))}
      </PinInputRow>
    </PinInputRoot>
  )
}
        `}}}},Q={render:()=>(0,I.jsx)(L,{type:`numeric`,children:(0,I.jsxs)(R,{children:[(0,I.jsx)(z,{index:0}),(0,I.jsx)(z,{index:1}),(0,I.jsx)(`span`,{style:{margin:`0 8px`,alignSelf:`center`},children:`-`}),(0,I.jsx)(z,{index:2}),(0,I.jsx)(z,{index:3}),(0,I.jsx)(z,{index:4})]})}),args:{}},$={render:()=>(0,I.jsx)(L,{type:`numeric`,placeholder:`_`,children:(0,I.jsxs)(R,{children:[(0,I.jsx)(`span`,{children:`(`}),(0,I.jsx)(z,{index:0}),(0,I.jsx)(z,{index:1}),(0,I.jsx)(`span`,{children:`)`}),(0,I.jsx)(z,{index:2}),(0,I.jsx)(z,{index:3}),(0,I.jsx)(z,{index:4}),(0,I.jsx)(z,{index:5}),(0,I.jsx)(`span`,{children:`-`}),(0,I.jsx)(z,{index:6}),(0,I.jsx)(z,{index:7}),(0,I.jsx)(z,{index:8}),(0,I.jsx)(z,{index:9})]})}),args:{}};V.parameters={...V.parameters,docs:{...(fe=V.parameters)?.docs,source:{originalSource:`{
  args: {
    length: 4
  }
}`,...(g=V.parameters)==null||(g=g.docs)==null?void 0:g.source}}},H.parameters={...H.parameters,docs:{...(pe=H.parameters)?.docs,source:{originalSource:`{
  args: {
    length: 6
  }
}`,...(_=H.parameters)==null||(_=_.docs)==null?void 0:_.source}}},U.parameters={...U.parameters,docs:{...(me=U.parameters)?.docs,source:{originalSource:`{
  args: {
    length: 4,
    type: 'numeric'
  }
}`,...(v=U.parameters)==null||(v=v.docs)==null?void 0:v.source}}},W.parameters={...W.parameters,docs:{...(he=W.parameters)?.docs,source:{originalSource:`{
  args: {
    length: 4,
    type: 'alphabetic'
  }
}`,...(y=W.parameters)==null||(y=y.docs)==null?void 0:y.source}}},G.parameters={...G.parameters,docs:{...(ge=G.parameters)?.docs,source:{originalSource:`{
  args: {
    length: 4,
    mask: true
  }
}`,...(b=G.parameters)==null||(b=b.docs)==null?void 0:b.source}}},K.parameters={...K.parameters,docs:{...(_e=K.parameters)?.docs,source:{originalSource:`{
  args: {
    length: 6,
    otp: true,
    type: 'numeric'
  }
}`,...(x=K.parameters)==null||(x=x.docs)==null?void 0:x.source}}},q.parameters={...q.parameters,docs:{...(ve=q.parameters)?.docs,source:{originalSource:`{
  args: {
    length: 4,
    disabled: true
  }
}`,...(S=q.parameters)==null||(S=S.docs)==null?void 0:S.source}}},J.parameters={...J.parameters,docs:{...(ye=J.parameters)?.docs,source:{originalSource:`{
  args: {
    length: 4,
    invalid: true
  }
}`,...(C=J.parameters)==null||(C=C.docs)==null?void 0:C.source}}},Y.parameters={...Y.parameters,docs:{...(be=Y.parameters)?.docs,source:{originalSource:`{
  args: {
    length: 4,
    placeholder: '_'
  }
}`,...(w=Y.parameters)==null||(w=w.docs)==null?void 0:w.source}}},X.parameters={...X.parameters,docs:{...(xe=X.parameters)?.docs,source:{originalSource:`{
  args: {
    defaultValue: ['1', '2', '', '']
  }
}`,...(T=X.parameters)==null||(T=T.docs)==null?void 0:T.source}}},Z.parameters={...Z.parameters,docs:{...(Se=Z.parameters)?.docs,source:{originalSource:`{
  render: () => <ControllerExample />,
  args: {},
  parameters: {
    docs: {
      source: {
        language: 'tsx',
        code: \`
const ControllerExample = () => {
  const [value, setValue] = useState(['', '', '', ''])
  return (
    <PinInputRoot value={value} onValueChange={setValue}>
      <PinInputRow>
        {value.map((val, index) => (
          <PinInputBox key={index} index={index} value={val} />
        ))}
      </PinInputRow>
    </PinInputRoot>
  )
}
        \`
      }
    }
  }
}`,...(E=Z.parameters)==null||(E=E.docs)==null?void 0:E.source}}},Q.parameters={...Q.parameters,docs:{...(Ce=Q.parameters)?.docs,source:{originalSource:`{
  render: () => <PinInputRoot type="numeric">
      <PinInputRow>
        <PinInputBox index={0} />
        <PinInputBox index={1} />
        <span style={{
        margin: '0 8px',
        alignSelf: 'center'
      }}>-</span>
        <PinInputBox index={2} />
        <PinInputBox index={3} />
        <PinInputBox index={4} />
      </PinInputRow>
    </PinInputRoot>,
  args: {}
}`,...(D=Q.parameters)==null||(D=D.docs)==null?void 0:D.source}}},$.parameters={...$.parameters,docs:{...(we=$.parameters)?.docs,source:{originalSource:`{
  render: () => <PinInputRoot type="numeric" placeholder="_">
      <PinInputRow>
        <span>(</span>
        <PinInputBox index={0} />
        <PinInputBox index={1} />
        <span>)</span>
        <PinInputBox index={2} />
        <PinInputBox index={3} />
        <PinInputBox index={4} />
        <PinInputBox index={5} />
        <span>-</span>
        <PinInputBox index={6} />
        <PinInputBox index={7} />
        <PinInputBox index={8} />
        <PinInputBox index={9} />
      </PinInputRow>
    </PinInputRoot>,
  args: {}
}`,...(O=$.parameters)==null||(O=O.docs)==null?void 0:O.source}}};const Ze=[`Base`,`SixDigits`,`NumericOnly`,`AlphabeticOnly`,`WithMask`,`OTPMode`,`Disabled`,`Invalid`,`CustomPlaceholder`,`WithDefaultValue`,`Controller`,`CustomComposition`,`PhoneNumberStyle`];export{W as AlphabeticOnly,V as Base,Z as Controller,Q as CustomComposition,Y as CustomPlaceholder,q as Disabled,J as Invalid,U as NumericOnly,K as OTPMode,$ as PhoneNumberStyle,H as SixDigits,X as WithDefaultValue,G as WithMask,Ze as __namedExportsOrder,Ye as default};